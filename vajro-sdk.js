!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.VajroSDK=o():e.VajroSDK=o()}(window,(()=>(()=>{"use strict";var e={d:(o,t)=>{for(var n in t)e.o(t,n)&&!e.o(o,n)&&Object.defineProperty(o,n,{enumerable:!0,get:t[n]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};e.r(o),e.d(o,{actions:()=>t,initialize:()=>a,isSDKReady:()=>c,subscribe:()=>y,triggers:()=>n,unsubscribe:()=>v,variables:()=>r});var t={};e.r(t),e.d(t,{openCart:()=>u,openCollection:()=>g,openCustomBlock:()=>f,openProduct:()=>p,reloadUI:()=>w});var n={};e.r(n),e.d(n,{customerUpdated:()=>E,onCartUpdated:()=>m,onPageLoaded:()=>h});const r={},i=e=>{console.log("🔄 Updating appContext with:",e),Object.keys(e).forEach((o=>{"object"!=typeof e[o]||null===e[o]||Array.isArray(e[o])?r[o]=e[o]:r[o]=Object.assign(Object.assign({},r[o]),e[o])})),console.log("✅ Updated VajroSDK.variables:",r)};let l=!1;const a=(e={})=>{console.log("🚀 Initializing VajroSDK with Context:",e),e&&0!==Object.keys(e).length?i(e):console.warn("⚠️ No app context provided. Waiting for WebView updates..."),l=!0,console.log("✅ VajroSDK is initialized:",JSON.stringify(r,null,2))},c=()=>l;var d;!function(e){e.OPEN_PRODUCT="openProduct",e.OPEN_COLLECTION="openCollection",e.OPEN_CART="openCart",e.OPEN_CUSTOM_BLOCK="openCustomBlock"}(d||(d={}));const s=(e,o)=>(console.log(`Dispatching action: ${e}`,o),new Promise(((t,n)=>{window.flutter_inappwebview&&"function"==typeof window.flutter_inappwebview.callHandler?window.flutter_inappwebview.callHandler(e,o).then((()=>{console.log(`Action dispatched successfully: ${e}`),t()})).catch((o=>{console.error(`Failed to dispatch action: ${e}`,o),n(o)})):(console.error("Flutter engine is not available."),n(new Error("Flutter engine is not available.")))}))),p=e=>new Promise(((o,t)=>{try{(e=>{if(!e.productId&&!e.productHandle)throw new Error("Either productId or productHandle must be provided.");if(e.productId&&"string"!=typeof e.productId)throw new Error("Invalid productId. It must be a non-empty string.");if(e.productHandle&&"string"!=typeof e.productHandle)throw new Error("Invalid productHandle. It must be a non-empty string.");if(e.variantId&&"string"!=typeof e.variantId)throw new Error("Invalid variantId. It must be a string.");if(e.variantHandle&&"string"!=typeof e.variantHandle)throw new Error("Invalid variantHandle. It must be a string.");if(void 0===e.openInNewPage)e.openInNewPage=!0;else if("boolean"!=typeof e.openInNewPage)throw new Error("Invalid openInNewPage. It must be a boolean.")})(e),s(d.OPEN_PRODUCT,e).then(o).catch(t)}catch(e){console.error("Validation failed:",e),t(e)}})),g=e=>new Promise(((o,t)=>{try{(e=>{if(!e.collectionHandle&&!e.collectionId)throw new Error('Either "collectionHandle" or "collectionId" must be provided.');if(e.collectionHandle&&"string"!=typeof e.collectionHandle)throw new Error('"collectionHandle" must be a string.');if(e.collectionId&&"string"!=typeof e.collectionId)throw new Error('"collectionId" must be a string.')})(e),s(d.OPEN_COLLECTION,e),o()}catch(e){console.error("Failed to open collection:",e),t(e)}})),u=()=>new Promise(((e,o)=>{try{s(d.OPEN_CART,null),e()}catch(e){console.error("Failed to open cart:",e),o(e)}})),f=e=>new Promise(((o,t)=>{try{(e=>{if(!e.id||"string"!=typeof e.id||""===e.id.trim())throw new Error('Invalid "id". It must be a non-empty string.');if(!e.type||"string"!=typeof e.type||""===e.type.trim())throw new Error('Invalid "type". It must be a non-empty string.')})(e),s(d.OPEN_CUSTOM_BLOCK,e).then(o).catch(t)}catch(e){console.error("Validation failed:",e),t(e)}})),w=()=>{console.log("🔄 UI Reload Triggered..."),location.reload()},b={},y=(e,o)=>{b[e]||(b[e]=[]),b[e].push(o),console.log(`✅ Subscribed to event: ${e}`),console.log("🔍 Current Event Listeners:",b)},v=(e,o)=>{b[e]&&(b[e]=b[e].filter((e=>e!==o)),console.log(`❌ Unsubscribed from event: ${e}`))},I=(e,o)=>{console.log(`🚀 Dispatching event: ${e}`,o),i(o),b[e]?b[e].forEach((t=>{try{t(o)}catch(o){console.error(`❌ Error executing listener for ${e}:`,o)}})):console.log(`⚠️ No subscribers found for event: ${e}`)},h=e=>{console.log("🚀 ON_PAGE_LOADED Triggered:",e),I("onPageLoaded",e)},m=e=>{console.log("🚀 ON_CART_UPDATED Triggered:",e),I("onCartUpdated",e)},E=e=>{console.log("🚀 ON_CUSTOMER_UPDATED Triggered:",e),I("onCustomerUpdated",e)};return o})()));
